#ifndef _ALTERA_HPS_0_H_
#define _ALTERA_HPS_0_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'soc_system' in
 * file './soc_system.sopcinfo'.
 */

/*
 * This file contains macros for module 'hps_0' and devices
 * connected to the following master:
 *   h2f_lw_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'onchip_memory2_0', class 'altera_avalon_onchip_memory2'
 * The macros are prefixed with 'ONCHIP_MEMORY2_0_'.
 * The prefix is the slave descriptor.
 */
#define ONCHIP_MEMORY2_0_COMPONENT_TYPE altera_avalon_onchip_memory2
#define ONCHIP_MEMORY2_0_COMPONENT_NAME onchip_memory2_0
#define ONCHIP_MEMORY2_0_BASE 0x0
#define ONCHIP_MEMORY2_0_SPAN 160000
#define ONCHIP_MEMORY2_0_END 0x270ff
#define ONCHIP_MEMORY2_0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define ONCHIP_MEMORY2_0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define ONCHIP_MEMORY2_0_CONTENTS_INFO ""
#define ONCHIP_MEMORY2_0_DUAL_PORT 0
#define ONCHIP_MEMORY2_0_GUI_RAM_BLOCK_TYPE AUTO
#define ONCHIP_MEMORY2_0_INIT_CONTENTS_FILE soc_system_onchip_memory2_0
#define ONCHIP_MEMORY2_0_INIT_MEM_CONTENT 1
#define ONCHIP_MEMORY2_0_INSTANCE_ID NONE
#define ONCHIP_MEMORY2_0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define ONCHIP_MEMORY2_0_RAM_BLOCK_TYPE AUTO
#define ONCHIP_MEMORY2_0_READ_DURING_WRITE_MODE DONT_CARE
#define ONCHIP_MEMORY2_0_SINGLE_CLOCK_OP 0
#define ONCHIP_MEMORY2_0_SIZE_MULTIPLE 1
#define ONCHIP_MEMORY2_0_SIZE_VALUE 160000
#define ONCHIP_MEMORY2_0_WRITABLE 1
#define ONCHIP_MEMORY2_0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_HEX 1
#define ONCHIP_MEMORY2_0_MEMORY_INFO_HAS_BYTE_LANE 0
#define ONCHIP_MEMORY2_0_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 32
#define ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_0

/*
 * Macros for device 'HC05_UART', class 'altera_avalon_uart'
 * The macros are prefixed with 'HC05_UART_'.
 * The prefix is the slave descriptor.
 */
#define HC05_UART_COMPONENT_TYPE altera_avalon_uart
#define HC05_UART_COMPONENT_NAME HC05_UART
#define HC05_UART_BASE 0x40000
#define HC05_UART_SPAN 32
#define HC05_UART_END 0x4001f
#define HC05_UART_IRQ 0
#define HC05_UART_BAUD 38400
#define HC05_UART_DATA_BITS 8
#define HC05_UART_FIXED_BAUD 1
#define HC05_UART_FREQ 50000000
#define HC05_UART_PARITY 'N'
#define HC05_UART_SIM_CHAR_STREAM ""
#define HC05_UART_SIM_TRUE_BAUD 0
#define HC05_UART_STOP_BITS 1
#define HC05_UART_SYNC_REG_DEPTH 2
#define HC05_UART_USE_CTS_RTS 0
#define HC05_UART_USE_EOP_REGISTER 0

/*
 * Macros for device 'Mode_control', class 'altera_avalon_pio'
 * The macros are prefixed with 'MODE_CONTROL_'.
 * The prefix is the slave descriptor.
 */
#define MODE_CONTROL_COMPONENT_TYPE altera_avalon_pio
#define MODE_CONTROL_COMPONENT_NAME Mode_control
#define MODE_CONTROL_BASE 0x40020
#define MODE_CONTROL_SPAN 16
#define MODE_CONTROL_END 0x4002f
#define MODE_CONTROL_BIT_CLEARING_EDGE_REGISTER 0
#define MODE_CONTROL_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MODE_CONTROL_CAPTURE 0
#define MODE_CONTROL_DATA_WIDTH 1
#define MODE_CONTROL_DO_TEST_BENCH_WIRING 0
#define MODE_CONTROL_DRIVEN_SIM_VALUE 0
#define MODE_CONTROL_EDGE_TYPE NONE
#define MODE_CONTROL_FREQ 50000000
#define MODE_CONTROL_HAS_IN 0
#define MODE_CONTROL_HAS_OUT 1
#define MODE_CONTROL_HAS_TRI 0
#define MODE_CONTROL_IRQ_TYPE NONE
#define MODE_CONTROL_RESET_VALUE 0

/*
 * Macros for device 'BT_Key', class 'altera_avalon_pio'
 * The macros are prefixed with 'BT_KEY_'.
 * The prefix is the slave descriptor.
 */
#define BT_KEY_COMPONENT_TYPE altera_avalon_pio
#define BT_KEY_COMPONENT_NAME BT_Key
#define BT_KEY_BASE 0x40030
#define BT_KEY_SPAN 16
#define BT_KEY_END 0x4003f
#define BT_KEY_BIT_CLEARING_EDGE_REGISTER 0
#define BT_KEY_BIT_MODIFYING_OUTPUT_REGISTER 0
#define BT_KEY_CAPTURE 0
#define BT_KEY_DATA_WIDTH 1
#define BT_KEY_DO_TEST_BENCH_WIRING 0
#define BT_KEY_DRIVEN_SIM_VALUE 0
#define BT_KEY_EDGE_TYPE NONE
#define BT_KEY_FREQ 50000000
#define BT_KEY_HAS_IN 1
#define BT_KEY_HAS_OUT 0
#define BT_KEY_HAS_TRI 0
#define BT_KEY_IRQ_TYPE NONE
#define BT_KEY_RESET_VALUE 0

/*
 * Macros for device 'leds', class 'altera_avalon_pio'
 * The macros are prefixed with 'LEDS_'.
 * The prefix is the slave descriptor.
 */
#define LEDS_COMPONENT_TYPE altera_avalon_pio
#define LEDS_COMPONENT_NAME leds
#define LEDS_BASE 0x40040
#define LEDS_SPAN 16
#define LEDS_END 0x4004f
#define LEDS_BIT_CLEARING_EDGE_REGISTER 0
#define LEDS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define LEDS_CAPTURE 0
#define LEDS_DATA_WIDTH 4
#define LEDS_DO_TEST_BENCH_WIRING 0
#define LEDS_DRIVEN_SIM_VALUE 0
#define LEDS_EDGE_TYPE NONE
#define LEDS_FREQ 50000000
#define LEDS_HAS_IN 0
#define LEDS_HAS_OUT 1
#define LEDS_HAS_TRI 0
#define LEDS_IRQ_TYPE NONE
#define LEDS_RESET_VALUE 0


#endif /* _ALTERA_HPS_0_H_ */
